/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Isaac, IsaacInterface } from "../Isaac";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061063f8061005f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806318160ddd1461005157806340c10f191461006f57806370a082311461008b578063a9059cbb146100bb575b600080fd5b6100596100d7565b6040516100669190610372565b60405180910390f35b6100896004803603810190610084919061041c565b6100dd565b005b6100a560048036038101906100a0919061045c565b6101de565b6040516100b29190610372565b60405180910390f35b6100d560048036038101906100d0919061041c565b610227565b005b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610162906104e6565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101ba9190610535565b9250508190555080600260008282546101d39190610535565b925050819055505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a0906105b5565b60405180910390fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f891906105d5565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034e9190610535565b925050819055505050565b6000819050919050565b61036c81610359565b82525050565b60006020820190506103876000830184610363565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103bd82610392565b9050919050565b6103cd816103b2565b81146103d857600080fd5b50565b6000813590506103ea816103c4565b92915050565b6103f981610359565b811461040457600080fd5b50565b600081359050610416816103f0565b92915050565b600080604083850312156104335761043261038d565b5b6000610441858286016103db565b925050602061045285828601610407565b9150509250929050565b6000602082840312156104725761047161038d565b5b6000610480848285016103db565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e206d696e7400000000000000000000000000600082015250565b60006104d0601383610489565b91506104db8261049a565b602082019050919050565b600060208201905081810360008301526104ff816104c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054082610359565b915061054b83610359565b925082820190508082111561056357610562610506565b5b92915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061059f601483610489565b91506105aa82610569565b602082019050919050565b600060208201905081810360008301526105ce81610592565b9050919050565b60006105e082610359565b91506105eb83610359565b925082820390508181111561060357610602610506565b5b9291505056fea2646970667358221220421dfaa90165f934132ad4e8afbe233d6490cb8839198d08e96f769b8604c6ba64736f6c634300081c0033";

type IsaacConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsaacConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Isaac__factory extends ContractFactory {
  constructor(...args: IsaacConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Isaac & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Isaac__factory {
    return super.connect(runner) as Isaac__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsaacInterface {
    return new Interface(_abi) as IsaacInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Isaac {
    return new Contract(address, _abi, runner) as unknown as Isaac;
  }
}
